@using Tyne.Blazor.Filtering;
@namespace Tyne.Blazor.Filtering.Controllers
@typeparam TRequest
@typeparam TValue
@inherits TyneMultiSelectFilterControllerBase<TRequest, TValue>

@{
    var selectItems = SelectItems;
    @if (selectItems is not null)
    {
        <MudSelect T="TValue"
                   MultiSelection="true"
                   SelectedValues="Value"
                   SelectedValuesChanged="SetValueAsync"
                   MaxHeight="MaxHeight"
                   AnchorOrigin="AnchorOrigin"
                   TransformOrigin="TransformOrigin"
                   Clearable="Clearable"
                   Dense="Dense"
                   Label="@(Label ?? ForKey.Key)"
                   ToStringFunc="ConvertValueToString">
            @foreach (var selectItem in selectItems)
            {
                <MudSelectItem Value="selectItem.Value">
                    @RenderItem(selectItem)
                </MudSelectItem>
            }
        </MudSelect>
    }
    else
    {
        <MudProgressCircular Indeterminate="true" Color="Color.Default" />
    }
}
