@using Tyne.Blazor.Filtering;
@namespace Tyne.Blazor.Filtering.Controllers
@typeparam TRequest
@typeparam TValue
@inherits TyneSingleSelectFilterControllerBase<TRequest, TValue>

@{
    var selectItems = SelectItems;
    <MudSelect T="TValue"
               Value="Value"
               ValueChanged="SetValueAsync"
               MaxHeight="MaxHeight"
               AnchorOrigin="AnchorOrigin"
               TransformOrigin="TransformOrigin"
               Clearable="Clearable"
               Dense="Dense"
               Label="@(Label ?? ForKey.Key)"
               Disabled="selectItems is null">
        @if (selectItems is not null)
        {
            foreach (var selectItem in selectItems)
            {
                <MudSelectItem Value="selectItem.Value">
                    @RenderItem(selectItem)
                </MudSelectItem>
            }
        }
        else
        {
            <MudProgressCircular Indeterminate="true" Color="Color.Default" />
        }
    </MudSelect>
}
