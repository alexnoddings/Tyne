@namespace Tyne.Blazor
@typeparam TRequest
@typeparam TResponse
@typeparam TValue
@inherits TyneAdvancedColumnBase<TRequest, TResponse, HashSet<TyneSelectValue<TValue>>>

<div class="d-none">
    <CascadingValue TValue="ITyneSelectColumn<TValue>" Value="this" IsFixed="true">
        @Values
    </CascadingValue>
</div>

<TyneColumnHeaderContent TRequest="TRequest" TResponse="TResponse" Column="this">
    <Header>
        @ChildContent
    </Header>
    <Filter>
        @if (Type is TyneMultiSelectColumnType.Checkbox)
        {
            <div class="d-flex flex-column" style="@ContentWidthStyle">
                @foreach (var registeredValue in RegisteredValues)
                {
                    <MudCheckBox T="bool" Checked="SelectedValues.Contains(registeredValue)" CheckedChanged="shouldSelect => UpdateSelectedAsync(registeredValue, shouldSelect)" Color="Color.Primary" Dense="true">
                        @registeredValue.ChildContent
                    </MudCheckBox>
                }
            </div>
        }
        else
        {
            <MudSelect T="TyneSelectValue<TValue>" MultiSelection="true" SelectedValues="SelectedValues" SelectedValuesChanged="UpdateSelectedValuesAsync" AnchorOrigin="Origin.BottomCenter" Class="mt-n3" ToStringFunc="selectValue => selectValue.ToString()" Style="@ContentWidthStyle">
                @foreach (var registeredValue in RegisteredValues)
                {
                    <MudSelectItem Value="registeredValue">
                        @registeredValue.ChildContent
                    </MudSelectItem>
                }
            </MudSelect>
        }
    </Filter>
</TyneColumnHeaderContent>
